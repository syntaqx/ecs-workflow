name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  ECR_REPOSITORY: example-ecr-repository
  AWS_REGION: us-east-1

jobs:

  build:
    uses: ./.github/workflows/docker.yml
    with:
      push: true
    secrets: inherit

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    -
      name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    -
      name: Push Docker image to ECR
      uses: aws-actions/amazon-ecr-login@v1
    -
      name: Create ECR repository if it doesn't exist
      run: |
        aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} || aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }}
    -
      name: Tag and push Docker Image to ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker tag ${{ needs.build.outputs.image }} ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY
        docker push ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY
    # -
    #   name: Deploy to ECS
    #   uses: aws-actions/amazon-ecs-deploy@v1
    #   with:
    #     cluster: ECS_CLUSTER_NAME
    #     service: SERVICE_NAME
    #     image: ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY
    #     registry: ${{ steps.login-ecr.outputs.registry }}
